// <auto-generated />
using System;
using Login_Pape.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Login_Pape.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Login_Pape.Entities.Aspirante", b =>
                {
                    b.Property<int>("PkAspirante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<byte[]>("ActaPDF")
                        .HasColumnType("varbinary(4000)");

                    b.Property<string>("Carrera")
                        .HasColumnType("text");

                    b.Property<byte[]>("CertificadoPDF")
                        .HasColumnType("varbinary(4000)");

                    b.Property<byte[]>("CurpPDF")
                        .HasColumnType("varbinary(4000)");

                    b.Property<int?>("FkUser")
                        .HasColumnType("int");

                    b.Property<string>("Matricula")
                        .HasColumnType("text");

                    b.HasKey("PkAspirante");

                    b.HasIndex("FkUser");

                    b.ToTable("Aspirantes");
                });

            modelBuilder.Entity("Login_Pape.Entities.Aulas", b =>
                {
                    b.Property<int>("PkCarrera")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Capacidad")
                        .HasColumnType("double");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.HasKey("PkCarrera");

                    b.ToTable("Aulas");
                });

            modelBuilder.Entity("Login_Pape.Entities.Carrera", b =>
                {
                    b.Property<int>("PkCarrera")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.Property<string>("PlanE")
                        .HasColumnType("text");

                    b.HasKey("PkCarrera");

                    b.ToTable("Carreras");
                });

            modelBuilder.Entity("Login_Pape.Entities.Empleados", b =>
                {
                    b.Property<int>("PkEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Correo")
                        .HasColumnType("text");

                    b.Property<TimeSpan>("FinJ")
                        .HasColumnType("time");

                    b.Property<int?>("FkRol")
                        .HasColumnType("int");

                    b.Property<int?>("FkUsuario")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("InicioJ")
                        .HasColumnType("time");

                    b.Property<string>("Jornada")
                        .HasColumnType("text");

                    b.HasKey("PkEmpleado");

                    b.HasIndex("FkRol");

                    b.HasIndex("FkUsuario");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("Login_Pape.Entities.Estudiante", b =>
                {
                    b.Property<int>("PkEstudent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<byte[]>("ActaPDF")
                        .HasColumnType("varbinary(4000)");

                    b.Property<string>("Carrera")
                        .HasColumnType("text");

                    b.Property<byte[]>("CertificadoPDF")
                        .HasColumnType("varbinary(4000)");

                    b.Property<string>("ContactoE")
                        .HasColumnType("text");

                    b.Property<string>("Correo")
                        .HasColumnType("text");

                    b.Property<int>("Creditos")
                        .HasColumnType("int");

                    b.Property<byte[]>("CurpPDF")
                        .HasColumnType("varbinary(4000)");

                    b.Property<int?>("FCarreraPkCarrera")
                        .HasColumnType("int");

                    b.Property<int?>("FkCarrera")
                        .HasColumnType("int");

                    b.Property<int?>("FkGrupo")
                        .HasColumnType("int");

                    b.Property<int?>("FkUser")
                        .HasColumnType("int");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(4000)");

                    b.Property<string>("Generacion")
                        .HasColumnType("text");

                    b.Property<string>("Matricula")
                        .HasColumnType("text");

                    b.Property<string>("Nss")
                        .HasColumnType("text");

                    b.Property<string>("Situacion")
                        .HasColumnType("text");

                    b.HasKey("PkEstudent");

                    b.HasIndex("FCarreraPkCarrera");

                    b.HasIndex("FkGrupo");

                    b.HasIndex("FkUser");

                    b.ToTable("Estudiantes");
                });

            modelBuilder.Entity("Login_Pape.Entities.Grupos", b =>
                {
                    b.Property<int?>("PkGrupo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("FkCarrera")
                        .HasColumnType("int");

                    b.Property<int?>("FkTurno")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.HasKey("PkGrupo");

                    b.HasIndex("FkCarrera");

                    b.HasIndex("FkTurno");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("Login_Pape.Entities.Horarios", b =>
                {
                    b.Property<DateTime>("Dia")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan>("Fin")
                        .HasColumnType("time");

                    b.Property<int?>("FkAula")
                        .HasColumnType("int");

                    b.Property<int?>("FkGrupo")
                        .HasColumnType("int");

                    b.Property<int?>("FkMateria")
                        .HasColumnType("int");

                    b.Property<int?>("FkProfesor")
                        .HasColumnType("int");

                    b.Property<int?>("FkSemestre")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Inicio")
                        .HasColumnType("time");

                    b.HasKey("Dia");

                    b.HasIndex("FkAula");

                    b.HasIndex("FkGrupo");

                    b.HasIndex("FkMateria");

                    b.HasIndex("FkProfesor");

                    b.HasIndex("FkSemestre");

                    b.ToTable("Horarios");
                });

            modelBuilder.Entity("Login_Pape.Entities.Materias", b =>
                {
                    b.Property<int?>("PkMateria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.HasKey("PkMateria");

                    b.ToTable("Materias");
                });

            modelBuilder.Entity("Login_Pape.Entities.Profesor", b =>
                {
                    b.Property<int>("PkProfe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Correo")
                        .HasColumnType("text");

                    b.Property<TimeSpan>("FinJ")
                        .HasColumnType("time");

                    b.Property<int?>("FkUser")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("InicioJ")
                        .HasColumnType("time");

                    b.Property<string>("Jornada")
                        .HasColumnType("text");

                    b.HasKey("PkProfe");

                    b.HasIndex("FkUser");

                    b.ToTable("Profesores");
                });

            modelBuilder.Entity("Login_Pape.Entities.Roles", b =>
                {
                    b.Property<int>("PkRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.HasKey("PkRol");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            PkRol = 1,
                            Nombre = "Aspirante"
                        },
                        new
                        {
                            PkRol = 2,
                            Nombre = "Estudiante"
                        },
                        new
                        {
                            PkRol = 3,
                            Nombre = "Profesor"
                        },
                        new
                        {
                            PkRol = 4,
                            Nombre = "Coordinador"
                        },
                        new
                        {
                            PkRol = 5,
                            Nombre = "Encargado"
                        });
                });

            modelBuilder.Entity("Login_Pape.Entities.Semestre", b =>
                {
                    b.Property<int>("PkSemestre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Semestres")
                        .HasColumnType("int");

                    b.HasKey("PkSemestre");

                    b.ToTable("Semestres");
                });

            modelBuilder.Entity("Login_Pape.Entities.Turnos", b =>
                {
                    b.Property<int>("PkTurnos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Fin")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("Inicio")
                        .HasColumnType("time");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.HasKey("PkTurnos");

                    b.ToTable("Turnos");
                });

            modelBuilder.Entity("Login_Pape.Entities.Usuario", b =>
                {
                    b.Property<int?>("PkUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApellidoM")
                        .HasColumnType("text");

                    b.Property<string>("ApellidoP")
                        .HasColumnType("text");

                    b.Property<string>("CURP")
                        .HasColumnType("text");

                    b.Property<string>("Calle")
                        .HasColumnType("text");

                    b.Property<string>("Correo")
                        .HasColumnType("text");

                    b.Property<int?>("FkRoles")
                        .HasColumnType("int");

                    b.Property<string>("Lt")
                        .HasColumnType("text");

                    b.Property<string>("Mz")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("SuperMz")
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .HasColumnType("text");

                    b.HasKey("PkUser");

                    b.HasIndex("FkRoles");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            PkUser = 1,
                            CURP = "JICA991026HTCMSL04",
                            Correo = "alfredo@gmail.com",
                            FkRoles = 1,
                            Password = "123"
                        });
                });

            modelBuilder.Entity("Login_Pape.Entities.Aspirante", b =>
                {
                    b.HasOne("Login_Pape.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("FkUser");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Login_Pape.Entities.Empleados", b =>
                {
                    b.HasOne("Login_Pape.Entities.Roles", "Roles")
                        .WithMany()
                        .HasForeignKey("FkRol");

                    b.HasOne("Login_Pape.Entities.Usuario", "Datos")
                        .WithMany()
                        .HasForeignKey("FkUsuario");

                    b.Navigation("Datos");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Login_Pape.Entities.Estudiante", b =>
                {
                    b.HasOne("Login_Pape.Entities.Carrera", "FCarrera")
                        .WithMany()
                        .HasForeignKey("FCarreraPkCarrera");

                    b.HasOne("Login_Pape.Entities.Grupos", "Grupo")
                        .WithMany()
                        .HasForeignKey("FkGrupo");

                    b.HasOne("Login_Pape.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("FkUser");

                    b.Navigation("FCarrera");

                    b.Navigation("Grupo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Login_Pape.Entities.Grupos", b =>
                {
                    b.HasOne("Login_Pape.Entities.Carrera", "Carrera")
                        .WithMany()
                        .HasForeignKey("FkCarrera");

                    b.HasOne("Login_Pape.Entities.Turnos", "Turno")
                        .WithMany()
                        .HasForeignKey("FkTurno");

                    b.Navigation("Carrera");

                    b.Navigation("Turno");
                });

            modelBuilder.Entity("Login_Pape.Entities.Horarios", b =>
                {
                    b.HasOne("Login_Pape.Entities.Aulas", "Aula")
                        .WithMany()
                        .HasForeignKey("FkAula");

                    b.HasOne("Login_Pape.Entities.Grupos", "Grupo")
                        .WithMany()
                        .HasForeignKey("FkGrupo");

                    b.HasOne("Login_Pape.Entities.Materias", "Materia")
                        .WithMany()
                        .HasForeignKey("FkMateria");

                    b.HasOne("Login_Pape.Entities.Profesor", "Profesor")
                        .WithMany()
                        .HasForeignKey("FkProfesor");

                    b.HasOne("Login_Pape.Entities.Semestre", "Semestre")
                        .WithMany()
                        .HasForeignKey("FkSemestre");

                    b.Navigation("Aula");

                    b.Navigation("Grupo");

                    b.Navigation("Materia");

                    b.Navigation("Profesor");

                    b.Navigation("Semestre");
                });

            modelBuilder.Entity("Login_Pape.Entities.Profesor", b =>
                {
                    b.HasOne("Login_Pape.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("FkUser");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Login_Pape.Entities.Usuario", b =>
                {
                    b.HasOne("Login_Pape.Entities.Roles", "Roles")
                        .WithMany()
                        .HasForeignKey("FkRoles");

                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
